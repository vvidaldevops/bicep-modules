#on: [push]
name: Publish Bicep module

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  Publish-Bicep-Modules-to-ACR:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@main

      # Log into Azure
      - name: 'Az CLI login'  
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install Bicep
      #- name: Install Bicep
      #  run: |
      #    az version
      #    az bicep install

      # Publish Bicep Components (Checking the version)
      - name: Publish Bicep Components to ACR
        run: |
          # loop through each directory and publish
          for d in */
          do
            cd $d
            version="v$(cat metadata.json | jq -r '.version.major').$(cat metadata.json | jq -r '.version.minor')"
            if [ -z "$(az acr repository show -n ${{ secrets.ACR_SERVER }} --image bicep/modules/${d::-1}:$version 2>/dev/null)" ]; 
            then 
              echo "Publishing br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
              # Publish Bicep Components to ACR
              echo "Publishing Bicep Module to the ACR"
              az bicep publish --file storage-account/storage.bicep --target "br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
              az bicep publish --file appserviceplan/appserviceplan.bicep --target "br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
              az bicep publish --file appservice/appservice.bicep --target "br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
            else 
              echo "Skipping br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version as it already exists";
            fi
            cd - > /dev/null
          done          
        working-directory: modules/components/

      # Publish Bicep Modules (Checking the version)
      - name: Publish Bicep Patterns to ACR
        run: |
          # loop through each directory and publish
          for d in */
          do
            cd $d
            version="v$(cat metadata.json | jq -r '.version.major').$(cat metadata.json | jq -r '.version.minor')"
            if [ -z "$(az acr repository show -n ${{ secrets.ACR_SERVER }} --image bicep/modules/${d::-1}:$version 2>/dev/null)" ]; 
            then 
              echo "Publishing br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
              # Publish Bicep Module to ACR
              echo "Publishing Bicep Patterns to the ACR"
              az bicep publish --file storage/simple-storage.bicep --target "br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
              az bicep publish --file appservice/simple-appservice.bicep --target "br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version";
            else 
              echo "Skipping br:${{ secrets.ACR_SERVER }}/bicep/modules/${d::-1}:$version as it already exists";
            fi
            cd - > /dev/null
          done          
        working-directory: modules/patterns/